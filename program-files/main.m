% Main interface script to perform optimised portfolio choices
% Available choices: see MENU in what follows. Every choice corresponds to
% a different MATLAB script file (attached)
% To run in MATLAB: go to main.m -> Run

while true
    choice = menu('Choose an option:', ...
                  'Basic stock portfolio optimization', ...
                  'Create constraint matrix', ...
                  'Portfolio optimization with constraint matrix', ...
                  'Portfolio optimization with risky and risk-free asset', ...
                  'Compute Value at Risk', ...
                  'Exit');
    switch choice
        case 1
            inputs = inputdlg({'Expected return of stocks:', 'Covariance matrix:', ...
                'Number of efficient portfolios to compute: '});
            if isempty(inputs), continue; end
            StockPortfolio(eval(inputs{1}), eval(inputs{2}), eval(inputs{3}));

        case 2
            inputs = inputdlg({'Number of assets:', 'Min constraints:', 'Max constraints:', ...
                'Groups:', 'Min group:', 'Max group:'});
            if isempty(inputs), continue; end
            CallPortcons(eval(inputs{1}), eval(inputs{2}), eval(inputs{3}), ...
                eval(inputs{4}), eval(inputs{5}), eval(inputs{6}));

        case 3
            inputs = inputdlg({'Number of assets:', 'Min constraints:', 'Max constraints:', ...
                'Groups:', 'Min group:', 'Max group:', ...
                'Expected returns:', 'Covariance matrix:', 'Number of efficient portfolios to compute:'});
            if isempty(inputs), continue; end
            CallPortopt(eval(inputs{1}), eval(inputs{2}), eval(inputs{3}), ...
                eval(inputs{4}), eval(inputs{5}), eval(inputs{6}), ...
                eval(inputs{7}), eval(inputs{8}), eval(inputs{9}));

        case 4
            inputs = inputdlg({'Expected return for risky assets:', 'Covariance matrix for risky assets:', ...
                'Risk-free rate:', 'Borrowing rate:', 'Risk aversion coefficient:'});
            if isempty(inputs), continue; end
            CallPortAllocWithRiskFree(eval(inputs{1}), eval(inputs{2}), ...
                eval(inputs{3}), eval(inputs{4}), eval(inputs{5}));

        case 5
            inputs = inputdlg({'Standard deviation of asset 1:', 'Standard deviation of asset 2:', 'Correlation coefficient:', ...
                'Expected return of assets:', 'Weights allocated assets:', 'Expected return of portfolio', ...
                'Confidence level:', 'Portfolio value:'});
            if isempty(inputs), continue; end
            VaR(eval(inputs{1}), eval(inputs{2}), eval(inputs{3}), ...
                eval(inputs{4}), eval(inputs{5}), eval(inputs{6}), ...
                eval(inputs{7}), eval(inputs{8}));
        
        case 6
            break;
    end
end